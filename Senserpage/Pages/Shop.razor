@using Microsoft.AspNetCore.Components
@using Newtonsoft.Json
@using Senserpage.Models
@inject Senserpage.Data.IGoods goods
@using System.Net.Http
@inject HttpClient httpClient
@inject NavigationManager navigator

<div class="container-fluid bg-dark">
    <div class="row">
        <div class="col">
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-dark border-bottom box-shadow">
            <div class="container">
                <a class="navbar-brand"><span style="color: rgb(235, 235, 235);"><b>SEN</b></span><span style="color: rgb(0, 114, 188);"><b>SER</b></span></a>

                <button class="navbar-toggler bg-light" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-center">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link text-white" href="#ourgoods">Товари</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white pointer" @onclick="OpenModal">Оплата і доставка</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="#senserfooter">Контакти</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white pointer" @onclick="OpenModalCall">Замовити дзвінок</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white pointer" @onclick="OpenModalCart">Кошик</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <div>
            <table class="container-fluid upperImage" cellpadding="5" cellspacing="0">
                <tr class="shadow">
                    <td>
                        <div class="textBlock">
                            <div class="textSpan fontSize56">
                                <strong>
                                    <span style="color: rgb(235, 235, 235);"><b>SEN</b></span><span style="color: rgb(0, 114, 188);"><b>SER</b></span>
                                </strong>
                            </div>
                        </div>
                        <br />
                        <br />
                        <br />
                        <br />
                        <br />
                        <br />
                        <div class="textBlock">
                            <div class="textSpan fontSize32">
                                <em><b>Електричні печі турецької якості -</b></em>
                            </div>
                            <div class="textSpan fontSize32">
                                <em>найкращі товари для вашого будинку</em>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
            </div>
            <div class="commonText">
                <div class="textSpan fontSize20">
                    <em>Електричні печі нового турецького бренду SENSER мають високу якість і виконані в сучасному дизайні.</em>
                </div>
                <div class="textSpan fontSize20">
                    <em>
                        Завдяки останнім технічним рішенням у поєднанні з простотою в експлуатації, печі задовольнять навіть найвибагливіших господинь.
                    </em>
                </div>
                <div class="textSpan fontSize20">
                    <em>Завдяки електричним печам SENSER ваша випічка буде радувати близьких, а приготовані страви викликати захоплення.</em>
                </div>
                <div class="textSpan fontSize20">
                    <em>Купуйте електричні печі  SENSER! Це незамінні помічники на вашій кухні!</em>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col"> 
            <div class="emptydiv">
            </div>
        </div>
    </div>
    <div class="row" id="ourgoods">
        <div class="col">   
            <div class="textSpanBlue fontSize24">
                <em>Електричні настільні печі SENSER</em>
            </div>
        </div>
    </div>
    @for(int i = 0; i < Goods.Count; i++)
    {
        var position = i % 2 == 0 ? "right" : "left";
    <Good Position="@position" Name="@Goods[i].Name" Price="@Goods[i].Price" Attributes="@Goods[i].Attributes" ImageLinks="@Goods[i].ImageLinks" ></Good>

    <div class="emptydiv"></div>
    }
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col">
    @*<header>*@
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-dark border-bottom box-shadow">
            <div class="container">
                <a class="navbar-brand"><span style="color: rgb(235, 235, 235);"><b>SEN</b></span><span style="color: rgb(0, 114, 188);"><b>SER</b></span></a>

                <button class="navbar-toggler bg-light" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-center">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link text-white" href="#ourgoods">Товари</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white pointer" @onclick="OpenModal">Оплата і доставка</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="#senserfooter">Контакти</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white pointer" @onclick="OpenModalCall">Замовити дзвінок</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white pointer" @onclick="OpenModalCart">Кошик</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    @*</header>*@
</div>
    </div>
</div>
<div class="container-fluid bg-dark">
    <div class="row">
        <div id="senserfooter" class="col">
    @*<footer id="senserfooter" class="border-top footer text-muted">*@
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-center bg-dark">
            @*<a class="nav-link text-white">SENSER</a>*@
            <a class="nav-link text-white">м. Київ; вул. Мурманська, 3</a>
            <a class="nav-link text-white" href="mailto:sensershops@gmail.com?subject=Senser">sensershops@gmail.com</a>
            <a class="nav-link text-white" href="tel:380991644955">+38(099)164-49-55</a>
        </div>
    @*</footer>*@
        </div>
    </div>
</div>

<OrderModal Title="Замовлення" IsOpened="@OrderOpened" DoIsOpened="@CloseModalOrder">
    <ModalBody>
            <table class="container-fluid" cellpadding="2" cellspacing="0">
                <thead>
                    <tr>
                        <td class="textSpan fontSize20">Фото</td>
                        <td class="textSpan fontSize20 width40">Найменування</td>
                        <td class="textSpan fontSize20">Ціна</td>
                        <td class="textSpan fontSize20">Кількість</td>
                    </tr>
                </thead>
                <tbody>
                    @for(int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                    {
                        var index = i;
                        var good = Senserpage.Data.Goods.CartGoods[i];
                    <tr>
                        <td><img width="100px" src="@good.PhotoLink"/></td>
                        <td class="textSpan fontSize20 width40"><span>@good.Name</span></td>
                        <td class="textSpan fontSize20"><span>@good.Price грн.</span></td>
                        <td class="textSpan fontSize20">
                        <button class="btn" @onclick="@(() => MinusNumber(index))">
                            <i class="fa fa-minus" aria-hidden="true"></i>
                        </button><span>@good.Number</span>
                        <button class="btn" @onclick="@(() => AddNumber(index))">
                            <i class="fa fa-plus" aria-hidden="true"></i>
                        </button>
                        <button class="btn" @onclick="@(() => RemoveNumber(index))">
                            <i class="fa fa-times redcolor" aria-hidden="true"></i>
                        </button>
                        </td>
                    </tr>
                    }
                    @if(Senserpage.Data.Goods.CartGoods.Count > 0)
                    {
                        decimal total = 0;
                        for(int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                        {
                            total += Senserpage.Data.Goods.CartGoods[i].Price * Senserpage.Data.Goods.CartGoods[i].Number;
                        }
                        <tr>
                            <td class="textSpan fontSize20">Всього</td>
                            <td></td>
                            <td class="textSpan fontSize20">@total грн.</td>
                        </tr>
                    }
                </tbody>
            </table>
            @if(Senserpage.Data.Goods.CartGoods.Count > 0)
            {
            <EditForm Model="@orderForm" OnValidSubmit="@SubmitOrder">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <InputText id="name" @bind-Value="orderForm.Name" placeholder="Ім'я"/>
            <InputText id="phone" @bind-Value="orderForm.Phone" placeholder="Телефон"/>

            <button class="btn btn-primary" type="submit">Оформити замовлення</button>
            </EditForm>
            }
    </ModalBody>
    <ModalFooter>
        <div>@SentOrder</div>
        <button class="btn btn-primary" @onclick="CloseModalOrder">Закрити</button>
    </ModalFooter>
</OrderModal>

<CartModal Title="Кошик" IsOpened="@CartOpened" DoIsOpened="@CloseModalCart">
    <ModalBody>
            <table class="container-fluid" cellpadding="2" cellspacing="0">
                <thead>
                    <tr>
                        <td class="textSpan fontSize20">Фото</td>
                        <td class="textSpan fontSize20 width40">Найменування</td>
                        <td class="textSpan fontSize20">Ціна</td>
                        <td class="textSpan fontSize20">Кількість</td>
                    </tr>
                </thead>
                <tbody>
                    @for(int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                    {
                        var index = i;
                        var good = Senserpage.Data.Goods.CartGoods[i];
                    <tr>
                        <td><img width="100" src="@good.PhotoLink"/></td>
                        <td class="textSpan fontSize20 width40"><span>@good.Name</span></td>
                        <td class="textSpan fontSize20"><span>@good.Price грн.</span></td>
                        <td class="textSpan fontSize20">
                        <button class="btn" @onclick="@(() => MinusNumber(index))">
                            <i class="fa fa-minus" aria-hidden="true"></i>
                        </button><span>@good.Number</span>
                        <button class="btn" @onclick="@(() => AddNumber(index))">
                            <i class="fa fa-plus" aria-hidden="true"></i>
                        </button>
                        <button class="btn" @onclick="@(() => RemoveNumber(index))">
                            <i class="fa fa-times redcolor" aria-hidden="true"></i>
                        </button>
                        </td>
                    </tr>
                    }
                    @if(Senserpage.Data.Goods.CartGoods.Count > 0)
                    {
                        decimal total = 0;
                        for(int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                        {
                            total += Senserpage.Data.Goods.CartGoods[i].Price * Senserpage.Data.Goods.CartGoods[i].Number;
                        }
                        <tr>
                            <td class="textSpan fontSize20">Всього</td>
                            <td></td>
                            <td class="textSpan fontSize20">@total грн.</td>
                        </tr>
                    }
                </tbody>
            </table>  
    </ModalBody>
    <ModalFooter>
        <button class="btn btn-primary" @onclick="CloseModalCart">Закрити</button>
        <button class="btn btn-primary" @onclick="CloseModalCartWithOrder">Оформити</button>
    </ModalFooter>
</CartModal>

<ModalCommon Title="Оплата і доставка" IsOpened="@IsOpened" DoIsOpened="@CloseModal">
    <ModalBody>
        <p>
            - Доставка по Україні здійснюється перевізником "МістЕкспресс" (за ваш рахунок) на відділення у вашому місті або адресно з оформленням післяплати. Середній тариф доставки по Україні 80 -100 грн.
        </p>
        <p>
            - У разі 100% передоплати за товар доставка виконується повністю за рахунок відправника.
        </p>
        <p>
            - При оформленні доставки з післяплатою - передоплата за товар 150 грн (сума післяплати, в такому випадку, зменшується).
        </p>
        <p>
            - Розрахунок за товар відбувається після огляду товару на складі "МістЕкспресса" (або з кур'єром служби доставки).
        </p>
        <p>
            - Товар на 100% застрахований. У разі виявлення механічних пошкоджень при огляді товару, внаслідок неналежного транспортування, ви залишаєте товар у перевізника. При цьому складається акт і вам повертається передоплата за товар у повному розмірі.
        </p>
        <p>
            - Звертаємо вашу увагу на те, що за переказ грошей (післяплату) перевізник бере комісію в розмірі: 2% від суми переказу + 20 грн.
        </p>
    </ModalBody>
    <ModalFooter>
        <button class="btn btn-primary" @onclick="CloseModal">Закрити</button>
    </ModalFooter>
</ModalCommon>

<CallmeModal Title="Замовте зворотній дзвінок!" IsOpened="CallOpened" DoIsOpened="@CloseModalCall">
    <ModalBody>
        @*<div>@Output</div>
        <div>@Request</div>*@
        <EditForm Model="@callMeForm" OnValidSubmit="@SubmitCallMe">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <InputText id="name" @bind-Value="callMeForm.Name" placeholder="Ім'я"/>
            <InputText id="phone" @bind-Value="callMeForm.Phone" placeholder="Телефон"/>

            <button class="btn btn-primary" type="submit">Подзвоніть мені</button>
        </EditForm>
    </ModalBody>
    <ModalFooter>
        <div>@Sent</div>
        <button class="btn btn-primary" @onclick="CloseModalCall">Закрити</button>
    </ModalFooter>
</CallmeModal>

@code {
    public List<Models.Good> Goods { get; set; }

    protected override void OnParametersSet()
    {
        BaseUri = navigator.BaseUri;
        Goods = goods.GetGoods();
    }

    public bool IsOpened { get; set; }

    void OpenModal()
    {
        IsOpened = true; 
    }

    void CloseModal()
    {        
        IsOpened = false; 
    }

    public bool CartOpened { get; set; }

    void OpenModalCart()
    {
        CartOpened = true; 
    }

    void CloseModalCart()
    {        
        CartOpened = false; 
    }

    void CloseModalCartWithOrder()
    {        
        CartOpened = false; 
        OpenModalOrder();
    }

    public bool CallOpened { get; set; }

    void OpenModalCall()
    {
        Sent = null;
        CallOpened = true; 
    }

    void CloseModalCall()
    {        
        Sent = null;
        CallOpened = false; 
    }

    private string Output { get; set; }
    private string Request { get; set; }

    private string BaseUri { get; set; }

    private CallMeForm callMeForm = new CallMeForm();

    private string Sent { get; set; }

    public async Task SubmitCallMe()
    {
        Sent = null;
        if (httpClient != null)
        {
            string output = JsonConvert.SerializeObject(callMeForm);

            @*var httpContent = new StringContent(output, Encoding.UTF8, "application/json");
            var baseaddress = navigator.BaseUri; // "https://localhost:44370/SendEmail"
            var response = await httpClient.PostAsync(navigator.BaseUri, httpContent);
            var resultPost = await response.Content.ReadAsStringAsync();
            Output = response.RequestMessage.Options.ToString();
            Request = response.ReasonPhrase;*@

            var requeststring = navigator.BaseUri + "SendEmail?input=" + output;
            Request = requeststring;
            var response = await httpClient.GetAsync(requeststring); 

            @*HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Get, requeststring);
            requestMessage.Content = new StringContent(output, Encoding.UTF8, "application/json");
            var response = await httpClient.SendAsync(requestMessage);*@

            if(response.IsSuccessStatusCode)
            {
                Sent = "Повідомлення відправлено.";
            }
            else
            {
                Sent = "Повідомлення не відправлено.";
            }
        }
    }

    public void AddNumber(int i)
    {
        Senserpage.Data.Goods.CartGoods[i].Number++;
    }
    public void MinusNumber(int i)
    {
        Senserpage.Data.Goods.CartGoods[i].Number--;
        if(Senserpage.Data.Goods.CartGoods[i].Number <= 0)
        {
            Senserpage.Data.Goods.CartGoods.RemoveAt(i);
        }
    }
    public void RemoveNumber(int i)
    {
        Senserpage.Data.Goods.CartGoods.RemoveAt(i);
    }

    public bool OrderOpened { get; set; }

    void OpenModalOrder()
    {
        SentOrder = null;
        OrderOpened = true; 
    }

    void CloseModalOrder()
    {        
        SentOrder = null;
        OrderOpened = false; 
    }

    @*async Task CloseModalOrderWithOrder()
    {      
        SentOrder = null;
        OrderOpened = false; 
        await SubmitOrder();
    }*@

    private OrderForm orderForm = new OrderForm();

    private string SentOrder { get; set; }

    public async Task SubmitOrder()
    {
        SentOrder = null;
        if (httpClient != null)
        {
            string output = JsonConvert.SerializeObject(orderForm);

            @*var httpContent = new StringContent(output, Encoding.UTF8, "application/json");
            var baseaddress = navigator.BaseUri; // "https://localhost:44370/SendEmail"
            var response = await httpClient.PostAsync(navigator.BaseUri, httpContent);
            var resultPost = await response.Content.ReadAsStringAsync();
            Output = response.RequestMessage.Options.ToString();
            Request = response.ReasonPhrase;*@

            var requeststring = navigator.BaseUri + "SendOrder?input=" + output;
            Request = requeststring;
            var response = await httpClient.GetAsync(requeststring); 

            @*HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Get, requeststring);
            requestMessage.Content = new StringContent(output, Encoding.UTF8, "application/json");
            var response = await httpClient.SendAsync(requestMessage);*@

            if(response.IsSuccessStatusCode)
            {
                SentOrder = "Замовлення відправлене.";
            }
            else
            {
                SentOrder = "Замовлення не відправлене.";
            }
        }
    }
}
