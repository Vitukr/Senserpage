
<div class="blazor-modal @cssClass" @onclick="ClosePhotos">
    <div class="blazor-modal-content-photos" @onclick:stopPropagation>        
        <div>
            <span class="text-left" @onclick="NextLeft"><i class="fa fas fa-chevron-left" aria-hidden="true"></i></span>
            <span class="modalPhoto text-center"><img class="modalPhoto text-center" src="@Link"/></span>
            <span class="text-right" @onclick="NextRight"><i class="fa fas fa-chevron-right" aria-hidden="true"></i></span>
        </div>
        @ModalBody
    </div>
</div>

@code {
    [Parameter]
    public string Link { get; set; }

    [Parameter]
    public List<string> Links { get; set; }

    [Parameter]
    public RenderFragment ModalBody { get; set; }

    [Parameter]
    public bool IsOpened { get; set; }

    [Parameter]
    public EventCallback DoIsOpened { get; set; }

    string cssClass => IsOpened ? "show" : "hide";

    void NextLeft()
    {
        for(int i = 0; i < Links.Count; i++)
        {
            if(Link == Links[i])
            {
                if(i == 0)
                {
                    Link = Links[Links.Count - 1];
                }
                else
                {
                    Link = Links[i - 1];
                }
                break;
            }
        }
    }

    void NextRight()
    {
        for(int i = 0; i < Links.Count; i++)
        {
            if(Link == Links[i])
            {
                if(i == Links.Count - 1)
                {
                    Link = Links[0];
                }
                else
                {
                    Link = Links[i + 1];
                }
                break;
            }
        }
    }

    void ClosePhotos()
    {
        IsOpened = false;
        DoIsOpened.InvokeAsync();
    }
}