@using Microsoft.AspNetCore.Components
@using Newtonsoft.Json
@using Senserpage.Models
@using Senserpage.Data
@inject Senserpage.Data.IGoods goods
@using System.Net.Http
@inject HttpClient httpClient
@inject NavigationManager navigator

<div class="container-fluid blazor-modal @cssClass" @onclick="CloseCart">
    <div class="blazor-modal-content" @onclick:stopPropagation>
        <div class="blazor-modal-header">
            <h5 class="blazor-modal-title">@Title</h5> 
            <span class="blazor-modal-close-button" @onclick="CloseCart">X</span>
        </div>
        <div class="blazor-modal-body">
            @ModalBody
        </div>
        <div class="blazor-modal-footer">
            @ModalFooter
            <button class="btn btn-primary" @onclick="AddToCart">В кошик</button>
        </div>
    </div>
</div>

<OrderModal Title="Замовлення" IsOpened="@OrderOpened" DoIsOpened="@CloseModalOrder">
    <ModalBody>
        @if (Senserpage.Data.Goods.CartGoods.Count > 0)
        {
            <table class="container-fluid" cellpadding="2" cellspacing="0">
                <thead>
                    <tr>
                        <td class="textSpan fontSize20">Фото</td>
                        <td class="textSpan fontSize20 width40">Найменування</td>
                        <td class="textSpan fontSize20">Ціна</td>
                        <td class="textSpan fontSize20">Кількість</td>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                    {
                        var index = i;
                        var good = Senserpage.Data.Goods.CartGoods[i];
                    <tr>
                        <td><img width="100" src="@good.PhotoLink" /></td>
                        <td class="textSpan fontSize20 width40"><span>@good.Name</span></td>
                        @if (good.PriceAction == 0)
                        {
                            <td class="textSpan fontSize20"><span>@good.Price грн.</span></td>
                        }
                        else
                        {
                            <td class="textSpan fontSize20"><span>@good.PriceAction грн.</span></td>
                        }

                        <td class="textSpan fontSize20">
                            <button class="btn" @onclick="@(() => MinusNumber(index))">
                                <i class="fa fa-minus" aria-hidden="true"></i>
                            </button><span>@good.Number</span>
                            <button class="btn" @onclick="@(() => AddNumber(index))">
                                <i class="fa fa-plus" aria-hidden="true"></i>
                            </button>
                            <button class="btn" @onclick="@(() => RemoveNumber(index))">
                                <i class="fa fa-times redcolor" aria-hidden="true"></i>
                            </button>
                        </td>
                    </tr>
                    }
                    @if (Senserpage.Data.Goods.CartGoods.Count > 0)
                    {
                        decimal total = 0;
                        for (int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                        {
                            total += Senserpage.Data.Goods.CartGoods[i].PriceAction == 0 ? Senserpage.Data.Goods.CartGoods[i].Price * Senserpage.Data.Goods.CartGoods[i].Number :
                              Senserpage.Data.Goods.CartGoods[i].PriceAction * Senserpage.Data.Goods.CartGoods[i].Number;
                        }
                        <tr>
                            <td class="textSpan fontSize20">Всього</td>
                            <td></td>
                            <td class="textSpan fontSize20">@total грн.</td>
                        </tr>
                    }
                </tbody>
            </table>
            @*@if(Senserpage.Data.Goods.CartGoods.Count > 0)
                {
                <EditForm Model="@orderForm" OnValidSubmit="@SubmitOrder">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <InputText id="name" @bind-Value="orderForm.Name" placeholder="Ім'я"/>
                <InputText id="phone" @bind-Value="orderForm.Phone" placeholder="Телефон"/>

                <button class="btn btn-primary" type="submit">Оформити замовлення</button>
                </EditForm>
                }*@
        }
        else
        {
            <div>@SentOrder</div>
        }
    </ModalBody>
    <ModalFooter>
        @if (Senserpage.Data.Goods.CartGoods.Count > 0)
        {
        <EditForm Model="@orderForm" OnValidSubmit="@SubmitOrder">
            <DataAnnotationsValidator />
            @*<ValidationSummary />*@

            <ValidationMessage For=@(() => orderForm.Name) style="color:red;" />
            <InputText id="name" @bind-Value="orderForm.Name" placeholder="Ім'я" />

            <ValidationMessage For=@(() => orderForm.Phone) style="color:red;" />
            <InputText id="phone" @bind-Value="orderForm.Phone" placeholder="Телефон" />

            <InputText id="phone" @bind-Value="orderForm.Email" placeholder="Електронна пошта" />
            <br />
            <button class="btn btn-primary" type="submit">Оформити замовлення</button>
        </EditForm>
        }
        @*<div>@SentOrder</div>*@
        <br />
        <button class="btn btn-primary" @onclick="CloseModalOrder">Закрити</button>
    </ModalFooter>
</OrderModal>

<CartModal Title="Кошик" IsOpened="@CartOpened" DoIsOpened="@CloseModalCart">
    <ModalBody>
            <table class="container-fluid" cellpadding="2" cellspacing="0">
                <thead>
                    <tr>
                        <td class="textSpan fontSize20">Фото</td>
                        <td class="textSpan fontSize20 width40">Найменування</td>
                        <td class="textSpan fontSize20">Ціна</td>
                        <td class="textSpan fontSize20">Кількість</td>
                    </tr>
                </thead>
                <tbody>
                    @for(int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                    {
                        var index = i;
                        var good = Senserpage.Data.Goods.CartGoods[i];
                    <tr>
                        <td><img width="100" src="@good.PhotoLink" /></td>
                        <td class="textSpan fontSize20 width40"><span>@good.Name</span></td>

                        @if (good.PriceAction == 0)
                        {
                            <td class="textSpan fontSize20"><span>@good.Price грн.</span></td>
                        }
                        else
                        {
                            <td class="textSpan fontSize20"><span>@good.PriceAction грн.</span></td>
                        }

                        <td class="textSpan fontSize20">
                            <button class="btn" @onclick="@(() => MinusNumber(index))">
                                <i class="fa fa-minus" aria-hidden="true"></i>
                            </button><span>@good.Number</span>
                            <button class="btn" @onclick="@(() => AddNumber(index))">
                                <i class="fa fa-plus" aria-hidden="true"></i>
                            </button>
                            <button class="btn" @onclick="@(() => RemoveNumber(index))">
                                <i class="fa fa-times redcolor" aria-hidden="true"></i>
                            </button>
                        </td>
                    </tr>
                    }
                    @if(Senserpage.Data.Goods.CartGoods.Count > 0)
                    {
                        decimal total = 0;
                        for(int i = 0; i < Senserpage.Data.Goods.CartGoods.Count; i++)
                        {
                            total += Senserpage.Data.Goods.CartGoods[i].PriceAction == 0 ?Senserpage.Data.Goods.CartGoods[i].Price * Senserpage.Data.Goods.CartGoods[i].Number :
                              Senserpage.Data.Goods.CartGoods[i].PriceAction * Senserpage.Data.Goods.CartGoods[i].Number;
                        }
                        <tr>
                            <td class="textSpan fontSize20">Всього</td>
                            <td></td>
                            <td class="textSpan fontSize20">@total грн.</td>
                        </tr>
                    }
                </tbody>
            </table>
    </ModalBody>
    <ModalFooter>
        <button class="btn btn-primary" @onclick="CloseModalCart">Закрити</button>
        <button class="btn btn-primary" @onclick="CloseModalCartWithOrder">Оформити</button>
    </ModalFooter>
</CartModal>


@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment ModalBody { get; set; }

    [Parameter]
    public RenderFragment ModalFooter { get; set; }

    [Parameter]
    public bool IsOpened { get; set; }

    string cssClass => IsOpened ? "show" : "hide";

    [Parameter]
    public EventCallback DoIsOpened { get; set; }

    void CloseCart()
    {
        IsOpened = false;
        DoIsOpened.InvokeAsync();
    }

    [Parameter]
    public CartGood Good { get; set; } = new CartGood();

    void AddToCart()
    {
        CloseCart();
        OpenModalCart();
    }

    [Parameter]
    public string NameGood { get; set; }

    [Parameter]
    public decimal PriceGood { get; set; }

    [Parameter]
    public string LinkGood { get; set; }

    public bool CartOpened { get; set; }

    void OpenModalCart()
    {
        CartOpened = true; 
    }

    void CloseModalCart()
    {        
        CartOpened = false; 
    }

    void CloseModalCartWithOrder()
    {        
        CartOpened = false; 
        OpenModalOrder();
    }

    public void AddNumber(int i)
    {
        Senserpage.Data.Goods.CartGoods[i].Number++;
    }
    public void MinusNumber(int i)
    {
        Senserpage.Data.Goods.CartGoods[i].Number--;
        if(Senserpage.Data.Goods.CartGoods[i].Number <= 0)
        {
            Senserpage.Data.Goods.CartGoods.RemoveAt(i);
        }
    }
    public void RemoveNumber(int i)
    {
        Senserpage.Data.Goods.CartGoods.RemoveAt(i);
    }

    public bool OrderOpened { get; set; }

    void OpenModalOrder()
    {
        SentOrder = null; 
        OrderOpened = true; 
    }

    void CloseModalOrder()
    {        
        SentOrder = null;
        OrderOpened = false; 
    }

    @*async Task CloseModalOrderWithOrder()
    {        
        SentOrder = null;
        OrderOpened = false; 
        await SubmitOrder();
    }*@

    private OrderForm orderForm = new OrderForm();

    private string SentOrder { get; set; }

    public async Task SubmitOrder()
    {
        SentOrder = null;
        if (httpClient != null)
        {
            string output = JsonConvert.SerializeObject(orderForm);

            @*var httpContent = new StringContent(output, Encoding.UTF8, "application/json");
            var baseaddress = navigator.BaseUri; // "https://localhost:44370/SendEmail"
            var response = await httpClient.PostAsync(navigator.BaseUri, httpContent);
            var resultPost = await response.Content.ReadAsStringAsync();
            Output = response.RequestMessage.Options.ToString();
            Request = response.ReasonPhrase;*@

var requeststring = navigator.BaseUri + "SendOrder?input=" + output;
var response = await httpClient.GetAsync(requeststring);

            @*HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Get, requeststring);
            requestMessage.Content = new StringContent(output, Encoding.UTF8, "application/json");
            var response = await httpClient.SendAsync(requestMessage);*@

            if (response.IsSuccessStatusCode)
            {
                SentOrder = "Дякуємо. Ваше замовлення прийняте. Найближчим часом з Вами зв’яжуться.";
            }
            else
            {
                SentOrder = "Замовлення не відправлене. Перевірте правильність заповнення форми та повторіть спробу";
            }
        }
    }
}